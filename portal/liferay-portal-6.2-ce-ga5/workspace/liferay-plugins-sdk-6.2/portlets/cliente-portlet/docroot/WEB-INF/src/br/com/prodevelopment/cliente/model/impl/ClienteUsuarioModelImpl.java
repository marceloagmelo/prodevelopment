/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package br.com.prodevelopment.cliente.model.impl;

import br.com.prodevelopment.cliente.model.ClienteUsuario;
import br.com.prodevelopment.cliente.model.ClienteUsuarioModel;
import br.com.prodevelopment.cliente.model.ClienteUsuarioSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the ClienteUsuario service. Represents a row in the &quot;ClienteUsuario&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link br.com.prodevelopment.cliente.model.ClienteUsuarioModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ClienteUsuarioImpl}.
 * </p>
 *
 * @author marcelo
 * @see ClienteUsuarioImpl
 * @see br.com.prodevelopment.cliente.model.ClienteUsuario
 * @see br.com.prodevelopment.cliente.model.ClienteUsuarioModel
 * @generated
 */
@JSON(strict = true)
public class ClienteUsuarioModelImpl extends BaseModelImpl<ClienteUsuario>
	implements ClienteUsuarioModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a cliente usuario model instance should use the {@link br.com.prodevelopment.cliente.model.ClienteUsuario} interface instead.
	 */
	public static final String TABLE_NAME = "ClienteUsuario";
	public static final Object[][] TABLE_COLUMNS = {
			{ "clienteUsuarioId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "clienteId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table ClienteUsuario (clienteUsuarioId LONG not null primary key,userId LONG,clienteId LONG)";
	public static final String TABLE_SQL_DROP = "drop table ClienteUsuario";
	public static final String ORDER_BY_JPQL = " ORDER BY clienteUsuario.clienteUsuarioId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY ClienteUsuario.clienteUsuarioId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.br.com.prodevelopment.cliente.model.ClienteUsuario"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.br.com.prodevelopment.cliente.model.ClienteUsuario"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.br.com.prodevelopment.cliente.model.ClienteUsuario"),
			true);
	public static long CLIENTEID_COLUMN_BITMASK = 1L;
	public static long USERID_COLUMN_BITMASK = 2L;
	public static long CLIENTEUSUARIOID_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static ClienteUsuario toModel(ClienteUsuarioSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		ClienteUsuario model = new ClienteUsuarioImpl();

		model.setClienteUsuarioId(soapModel.getClienteUsuarioId());
		model.setUserId(soapModel.getUserId());
		model.setClienteId(soapModel.getClienteId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<ClienteUsuario> toModels(ClienteUsuarioSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<ClienteUsuario> models = new ArrayList<ClienteUsuario>(soapModels.length);

		for (ClienteUsuarioSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.br.com.prodevelopment.cliente.model.ClienteUsuario"));

	public ClienteUsuarioModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _clienteUsuarioId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setClienteUsuarioId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _clienteUsuarioId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ClienteUsuario.class;
	}

	@Override
	public String getModelClassName() {
		return ClienteUsuario.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("clienteUsuarioId", getClienteUsuarioId());
		attributes.put("userId", getUserId());
		attributes.put("clienteId", getClienteId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long clienteUsuarioId = (Long)attributes.get("clienteUsuarioId");

		if (clienteUsuarioId != null) {
			setClienteUsuarioId(clienteUsuarioId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long clienteId = (Long)attributes.get("clienteId");

		if (clienteId != null) {
			setClienteId(clienteId);
		}
	}

	@JSON
	@Override
	public long getClienteUsuarioId() {
		return _clienteUsuarioId;
	}

	@Override
	public void setClienteUsuarioId(long clienteUsuarioId) {
		_columnBitmask = -1L;

		_clienteUsuarioId = clienteUsuarioId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@JSON
	@Override
	public long getClienteId() {
		return _clienteId;
	}

	@Override
	public void setClienteId(long clienteId) {
		_columnBitmask |= CLIENTEID_COLUMN_BITMASK;

		if (!_setOriginalClienteId) {
			_setOriginalClienteId = true;

			_originalClienteId = _clienteId;
		}

		_clienteId = clienteId;
	}

	public long getOriginalClienteId() {
		return _originalClienteId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			ClienteUsuario.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ClienteUsuario toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ClienteUsuario)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ClienteUsuarioImpl clienteUsuarioImpl = new ClienteUsuarioImpl();

		clienteUsuarioImpl.setClienteUsuarioId(getClienteUsuarioId());
		clienteUsuarioImpl.setUserId(getUserId());
		clienteUsuarioImpl.setClienteId(getClienteId());

		clienteUsuarioImpl.resetOriginalValues();

		return clienteUsuarioImpl;
	}

	@Override
	public int compareTo(ClienteUsuario clienteUsuario) {
		int value = 0;

		if (getClienteUsuarioId() < clienteUsuario.getClienteUsuarioId()) {
			value = -1;
		}
		else if (getClienteUsuarioId() > clienteUsuario.getClienteUsuarioId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ClienteUsuario)) {
			return false;
		}

		ClienteUsuario clienteUsuario = (ClienteUsuario)obj;

		long primaryKey = clienteUsuario.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ClienteUsuarioModelImpl clienteUsuarioModelImpl = this;

		clienteUsuarioModelImpl._originalUserId = clienteUsuarioModelImpl._userId;

		clienteUsuarioModelImpl._setOriginalUserId = false;

		clienteUsuarioModelImpl._originalClienteId = clienteUsuarioModelImpl._clienteId;

		clienteUsuarioModelImpl._setOriginalClienteId = false;

		clienteUsuarioModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ClienteUsuario> toCacheModel() {
		ClienteUsuarioCacheModel clienteUsuarioCacheModel = new ClienteUsuarioCacheModel();

		clienteUsuarioCacheModel.clienteUsuarioId = getClienteUsuarioId();

		clienteUsuarioCacheModel.userId = getUserId();

		clienteUsuarioCacheModel.clienteId = getClienteId();

		return clienteUsuarioCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{clienteUsuarioId=");
		sb.append(getClienteUsuarioId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", clienteId=");
		sb.append(getClienteId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("br.com.prodevelopment.cliente.model.ClienteUsuario");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>clienteUsuarioId</column-name><column-value><![CDATA[");
		sb.append(getClienteUsuarioId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>clienteId</column-name><column-value><![CDATA[");
		sb.append(getClienteId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ClienteUsuario.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ClienteUsuario.class
		};
	private long _clienteUsuarioId;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private long _clienteId;
	private long _originalClienteId;
	private boolean _setOriginalClienteId;
	private long _columnBitmask;
	private ClienteUsuario _escapedModel;
}