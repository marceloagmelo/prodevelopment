/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package br.com.prodevelopment.pesquisaopiniao.model;

import com.liferay.portal.LocaleException;
import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;
import java.util.Locale;
import java.util.Map;

/**
 * The base model interface for the Resposta service. Represents a row in the &quot;PO_Resposta&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link br.com.prodevelopment.pesquisaopiniao.model.impl.RespostaModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link br.com.prodevelopment.pesquisaopiniao.model.impl.RespostaImpl}.
 * </p>
 *
 * @author Marcelo Melo
 * @see Resposta
 * @see br.com.prodevelopment.pesquisaopiniao.model.impl.RespostaImpl
 * @see br.com.prodevelopment.pesquisaopiniao.model.impl.RespostaModelImpl
 * @generated
 */
public interface RespostaModel extends BaseModel<Resposta> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a resposta model instance should use the {@link Resposta} interface instead.
	 */

	/**
	 * Returns the primary key of this resposta.
	 *
	 * @return the primary key of this resposta
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this resposta.
	 *
	 * @param primaryKey the primary key of this resposta
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this resposta.
	 *
	 * @return the ID of this resposta
	 */
	public long getId();

	/**
	 * Sets the ID of this resposta.
	 *
	 * @param id the ID of this resposta
	 */
	public void setId(long id);

	/**
	 * Returns the descricao of this resposta.
	 *
	 * @return the descricao of this resposta
	 */
	public String getDescricao();

	/**
	 * Returns the localized descricao of this resposta in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized descricao of this resposta
	 */
	@AutoEscape
	public String getDescricao(Locale locale);

	/**
	 * Returns the localized descricao of this resposta in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized descricao of this resposta. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getDescricao(Locale locale, boolean useDefault);

	/**
	 * Returns the localized descricao of this resposta in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized descricao of this resposta
	 */
	@AutoEscape
	public String getDescricao(String languageId);

	/**
	 * Returns the localized descricao of this resposta in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized descricao of this resposta
	 */
	@AutoEscape
	public String getDescricao(String languageId, boolean useDefault);

	@AutoEscape
	public String getDescricaoCurrentLanguageId();

	@AutoEscape
	public String getDescricaoCurrentValue();

	/**
	 * Returns a map of the locales and localized descricaos of this resposta.
	 *
	 * @return the locales and localized descricaos of this resposta
	 */
	public Map<Locale, String> getDescricaoMap();

	/**
	 * Sets the descricao of this resposta.
	 *
	 * @param descricao the descricao of this resposta
	 */
	public void setDescricao(String descricao);

	/**
	 * Sets the localized descricao of this resposta in the language.
	 *
	 * @param descricao the localized descricao of this resposta
	 * @param locale the locale of the language
	 */
	public void setDescricao(String descricao, Locale locale);

	/**
	 * Sets the localized descricao of this resposta in the language, and sets the default locale.
	 *
	 * @param descricao the localized descricao of this resposta
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setDescricao(String descricao, Locale locale,
		Locale defaultLocale);

	public void setDescricaoCurrentLanguageId(String languageId);

	/**
	 * Sets the localized descricaos of this resposta from the map of locales and localized descricaos.
	 *
	 * @param descricaoMap the locales and localized descricaos of this resposta
	 */
	public void setDescricaoMap(Map<Locale, String> descricaoMap);

	/**
	 * Sets the localized descricaos of this resposta from the map of locales and localized descricaos, and sets the default locale.
	 *
	 * @param descricaoMap the locales and localized descricaos of this resposta
	 * @param defaultLocale the default locale
	 */
	public void setDescricaoMap(Map<Locale, String> descricaoMap,
		Locale defaultLocale);

	/**
	 * Returns the data inclusao of this resposta.
	 *
	 * @return the data inclusao of this resposta
	 */
	public Date getDataInclusao();

	/**
	 * Sets the data inclusao of this resposta.
	 *
	 * @param dataInclusao the data inclusao of this resposta
	 */
	public void setDataInclusao(Date dataInclusao);

	/**
	 * Returns the data alteracao of this resposta.
	 *
	 * @return the data alteracao of this resposta
	 */
	public Date getDataAlteracao();

	/**
	 * Sets the data alteracao of this resposta.
	 *
	 * @param dataAlteracao the data alteracao of this resposta
	 */
	public void setDataAlteracao(Date dataAlteracao);

	/**
	 * Returns the pergunta ID of this resposta.
	 *
	 * @return the pergunta ID of this resposta
	 */
	public long getPerguntaId();

	/**
	 * Sets the pergunta ID of this resposta.
	 *
	 * @param perguntaId the pergunta ID of this resposta
	 */
	public void setPerguntaId(long perguntaId);

	/**
	 * Returns the user ID inclusao of this resposta.
	 *
	 * @return the user ID inclusao of this resposta
	 */
	public long getUserIdInclusao();

	/**
	 * Sets the user ID inclusao of this resposta.
	 *
	 * @param userIdInclusao the user ID inclusao of this resposta
	 */
	public void setUserIdInclusao(long userIdInclusao);

	/**
	 * Returns the user ID alteracao of this resposta.
	 *
	 * @return the user ID alteracao of this resposta
	 */
	public long getUserIdAlteracao();

	/**
	 * Sets the user ID alteracao of this resposta.
	 *
	 * @param userIdAlteracao the user ID alteracao of this resposta
	 */
	public void setUserIdAlteracao(long userIdAlteracao);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public void prepareLocalizedFieldsForImport(Locale defaultImportLocale)
		throws LocaleException;

	public Object clone();

	public int compareTo(Resposta resposta);

	public int hashCode();

	public CacheModel<Resposta> toCacheModel();

	public Resposta toEscapedModel();

	public String toString();

	public String toXmlString();
}