/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package br.com.prodevelopment.academiahorario.model.impl;

import br.com.prodevelopment.academiahorario.model.AcademiaHorario;
import br.com.prodevelopment.academiahorario.model.AcademiaHorarioModel;
import br.com.prodevelopment.academiahorario.model.AcademiaHorarioSoap;

import com.liferay.portal.LocaleException;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.LocaleUtil;
import com.liferay.portal.kernel.util.LocalizationUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.kernel.util.Validator;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;

/**
 * The base model implementation for the AcademiaHorario service. Represents a row in the &quot;AcademiaHorario&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link br.com.prodevelopment.academiahorario.model.AcademiaHorarioModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AcademiaHorarioImpl}.
 * </p>
 *
 * @author Marcelo
 * @see AcademiaHorarioImpl
 * @see br.com.prodevelopment.academiahorario.model.AcademiaHorario
 * @see br.com.prodevelopment.academiahorario.model.AcademiaHorarioModel
 * @generated
 */
@JSON(strict = true)
public class AcademiaHorarioModelImpl extends BaseModelImpl<AcademiaHorario>
	implements AcademiaHorarioModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a academia horario model instance should use the {@link br.com.prodevelopment.academiahorario.model.AcademiaHorario} interface instead.
	 */
	public static final String TABLE_NAME = "AcademiaHorario";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "academiaHorarioId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "createUserId", Types.BIGINT },
			{ "modifiedUserId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "diaSemana", Types.INTEGER },
			{ "horaInicial", Types.VARCHAR },
			{ "HoraFinal", Types.VARCHAR },
			{ "atividadeId", Types.BIGINT },
			{ "atividadeNome", Types.VARCHAR },
			{ "versao", Types.DOUBLE }
		};
	public static final String TABLE_SQL_CREATE = "create table AcademiaHorario (uuid_ VARCHAR(75) null,academiaHorarioId LONG not null primary key,companyId LONG,groupId LONG,createUserId LONG,modifiedUserId LONG,createDate DATE null,modifiedDate DATE null,diaSemana INTEGER,horaInicial VARCHAR(75) null,HoraFinal VARCHAR(75) null,atividadeId LONG,atividadeNome STRING null,versao DOUBLE)";
	public static final String TABLE_SQL_DROP = "drop table AcademiaHorario";
	public static final String ORDER_BY_JPQL = " ORDER BY academiaHorario.atividadeNome ASC, academiaHorario.diaSemana ASC, academiaHorario.horaInicial ASC";
	public static final String ORDER_BY_SQL = " ORDER BY AcademiaHorario.atividadeNome ASC, AcademiaHorario.diaSemana ASC, AcademiaHorario.horaInicial ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.br.com.prodevelopment.academiahorario.model.AcademiaHorario"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.br.com.prodevelopment.academiahorario.model.AcademiaHorario"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.br.com.prodevelopment.academiahorario.model.AcademiaHorario"),
			true);
	public static long ATIVIDADEID_COLUMN_BITMASK = 1L;
	public static long COMPANYID_COLUMN_BITMASK = 2L;
	public static long DIASEMANA_COLUMN_BITMASK = 4L;
	public static long GROUPID_COLUMN_BITMASK = 8L;
	public static long HORAINICIAL_COLUMN_BITMASK = 16L;
	public static long UUID_COLUMN_BITMASK = 32L;
	public static long ATIVIDADENOME_COLUMN_BITMASK = 64L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static AcademiaHorario toModel(AcademiaHorarioSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		AcademiaHorario model = new AcademiaHorarioImpl();

		model.setUuid(soapModel.getUuid());
		model.setAcademiaHorarioId(soapModel.getAcademiaHorarioId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setCreateUserId(soapModel.getCreateUserId());
		model.setModifiedUserId(soapModel.getModifiedUserId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setDiaSemana(soapModel.getDiaSemana());
		model.setHoraInicial(soapModel.getHoraInicial());
		model.setHoraFinal(soapModel.getHoraFinal());
		model.setAtividadeId(soapModel.getAtividadeId());
		model.setAtividadeNome(soapModel.getAtividadeNome());
		model.setVersao(soapModel.getVersao());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<AcademiaHorario> toModels(
		AcademiaHorarioSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<AcademiaHorario> models = new ArrayList<AcademiaHorario>(soapModels.length);

		for (AcademiaHorarioSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.br.com.prodevelopment.academiahorario.model.AcademiaHorario"));

	public AcademiaHorarioModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _academiaHorarioId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setAcademiaHorarioId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _academiaHorarioId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return AcademiaHorario.class;
	}

	@Override
	public String getModelClassName() {
		return AcademiaHorario.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("academiaHorarioId", getAcademiaHorarioId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("createUserId", getCreateUserId());
		attributes.put("modifiedUserId", getModifiedUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("diaSemana", getDiaSemana());
		attributes.put("horaInicial", getHoraInicial());
		attributes.put("HoraFinal", getHoraFinal());
		attributes.put("atividadeId", getAtividadeId());
		attributes.put("atividadeNome", getAtividadeNome());
		attributes.put("versao", getVersao());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long academiaHorarioId = (Long)attributes.get("academiaHorarioId");

		if (academiaHorarioId != null) {
			setAcademiaHorarioId(academiaHorarioId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long createUserId = (Long)attributes.get("createUserId");

		if (createUserId != null) {
			setCreateUserId(createUserId);
		}

		Long modifiedUserId = (Long)attributes.get("modifiedUserId");

		if (modifiedUserId != null) {
			setModifiedUserId(modifiedUserId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Integer diaSemana = (Integer)attributes.get("diaSemana");

		if (diaSemana != null) {
			setDiaSemana(diaSemana);
		}

		String horaInicial = (String)attributes.get("horaInicial");

		if (horaInicial != null) {
			setHoraInicial(horaInicial);
		}

		String HoraFinal = (String)attributes.get("HoraFinal");

		if (HoraFinal != null) {
			setHoraFinal(HoraFinal);
		}

		Long atividadeId = (Long)attributes.get("atividadeId");

		if (atividadeId != null) {
			setAtividadeId(atividadeId);
		}

		String atividadeNome = (String)attributes.get("atividadeNome");

		if (atividadeNome != null) {
			setAtividadeNome(atividadeNome);
		}

		Double versao = (Double)attributes.get("versao");

		if (versao != null) {
			setVersao(versao);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getAcademiaHorarioId() {
		return _academiaHorarioId;
	}

	@Override
	public void setAcademiaHorarioId(long academiaHorarioId) {
		_academiaHorarioId = academiaHorarioId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCreateUserId() {
		return _createUserId;
	}

	@Override
	public void setCreateUserId(long createUserId) {
		_createUserId = createUserId;
	}

	@Override
	public String getCreateUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getCreateUserId(), "uuid",
			_createUserUuid);
	}

	@Override
	public void setCreateUserUuid(String createUserUuid) {
		_createUserUuid = createUserUuid;
	}

	@JSON
	@Override
	public long getModifiedUserId() {
		return _modifiedUserId;
	}

	@Override
	public void setModifiedUserId(long modifiedUserId) {
		_modifiedUserId = modifiedUserId;
	}

	@Override
	public String getModifiedUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getModifiedUserId(), "uuid",
			_modifiedUserUuid);
	}

	@Override
	public void setModifiedUserUuid(String modifiedUserUuid) {
		_modifiedUserUuid = modifiedUserUuid;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public int getDiaSemana() {
		return _diaSemana;
	}

	@Override
	public void setDiaSemana(int diaSemana) {
		_columnBitmask = -1L;

		if (!_setOriginalDiaSemana) {
			_setOriginalDiaSemana = true;

			_originalDiaSemana = _diaSemana;
		}

		_diaSemana = diaSemana;
	}

	public int getOriginalDiaSemana() {
		return _originalDiaSemana;
	}

	@JSON
	@Override
	public String getHoraInicial() {
		if (_horaInicial == null) {
			return StringPool.BLANK;
		}
		else {
			return _horaInicial;
		}
	}

	@Override
	public void setHoraInicial(String horaInicial) {
		_columnBitmask = -1L;

		if (_originalHoraInicial == null) {
			_originalHoraInicial = _horaInicial;
		}

		_horaInicial = horaInicial;
	}

	public String getOriginalHoraInicial() {
		return GetterUtil.getString(_originalHoraInicial);
	}

	@JSON
	@Override
	public String getHoraFinal() {
		if (_HoraFinal == null) {
			return StringPool.BLANK;
		}
		else {
			return _HoraFinal;
		}
	}

	@Override
	public void setHoraFinal(String HoraFinal) {
		_HoraFinal = HoraFinal;
	}

	@JSON
	@Override
	public long getAtividadeId() {
		return _atividadeId;
	}

	@Override
	public void setAtividadeId(long atividadeId) {
		_columnBitmask |= ATIVIDADEID_COLUMN_BITMASK;

		if (!_setOriginalAtividadeId) {
			_setOriginalAtividadeId = true;

			_originalAtividadeId = _atividadeId;
		}

		_atividadeId = atividadeId;
	}

	public long getOriginalAtividadeId() {
		return _originalAtividadeId;
	}

	@JSON
	@Override
	public String getAtividadeNome() {
		if (_atividadeNome == null) {
			return StringPool.BLANK;
		}
		else {
			return _atividadeNome;
		}
	}

	@Override
	public String getAtividadeNome(Locale locale) {
		String languageId = LocaleUtil.toLanguageId(locale);

		return getAtividadeNome(languageId);
	}

	@Override
	public String getAtividadeNome(Locale locale, boolean useDefault) {
		String languageId = LocaleUtil.toLanguageId(locale);

		return getAtividadeNome(languageId, useDefault);
	}

	@Override
	public String getAtividadeNome(String languageId) {
		return LocalizationUtil.getLocalization(getAtividadeNome(), languageId);
	}

	@Override
	public String getAtividadeNome(String languageId, boolean useDefault) {
		return LocalizationUtil.getLocalization(getAtividadeNome(), languageId,
			useDefault);
	}

	@Override
	public String getAtividadeNomeCurrentLanguageId() {
		return _atividadeNomeCurrentLanguageId;
	}

	@JSON
	@Override
	public String getAtividadeNomeCurrentValue() {
		Locale locale = getLocale(_atividadeNomeCurrentLanguageId);

		return getAtividadeNome(locale);
	}

	@Override
	public Map<Locale, String> getAtividadeNomeMap() {
		return LocalizationUtil.getLocalizationMap(getAtividadeNome());
	}

	@Override
	public void setAtividadeNome(String atividadeNome) {
		_columnBitmask = -1L;

		_atividadeNome = atividadeNome;
	}

	@Override
	public void setAtividadeNome(String atividadeNome, Locale locale) {
		setAtividadeNome(atividadeNome, locale, LocaleUtil.getDefault());
	}

	@Override
	public void setAtividadeNome(String atividadeNome, Locale locale,
		Locale defaultLocale) {
		String languageId = LocaleUtil.toLanguageId(locale);
		String defaultLanguageId = LocaleUtil.toLanguageId(defaultLocale);

		if (Validator.isNotNull(atividadeNome)) {
			setAtividadeNome(LocalizationUtil.updateLocalization(
					getAtividadeNome(), "AtividadeNome", atividadeNome,
					languageId, defaultLanguageId));
		}
		else {
			setAtividadeNome(LocalizationUtil.removeLocalization(
					getAtividadeNome(), "AtividadeNome", languageId));
		}
	}

	@Override
	public void setAtividadeNomeCurrentLanguageId(String languageId) {
		_atividadeNomeCurrentLanguageId = languageId;
	}

	@Override
	public void setAtividadeNomeMap(Map<Locale, String> atividadeNomeMap) {
		setAtividadeNomeMap(atividadeNomeMap, LocaleUtil.getDefault());
	}

	@Override
	public void setAtividadeNomeMap(Map<Locale, String> atividadeNomeMap,
		Locale defaultLocale) {
		if (atividadeNomeMap == null) {
			return;
		}

		setAtividadeNome(LocalizationUtil.updateLocalization(atividadeNomeMap,
				getAtividadeNome(), "AtividadeNome",
				LocaleUtil.toLanguageId(defaultLocale)));
	}

	@JSON
	@Override
	public double getVersao() {
		return _versao;
	}

	@Override
	public void setVersao(double versao) {
		_versao = versao;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				AcademiaHorario.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			AcademiaHorario.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public String[] getAvailableLanguageIds() {
		Set<String> availableLanguageIds = new TreeSet<String>();

		Map<Locale, String> atividadeNomeMap = getAtividadeNomeMap();

		for (Map.Entry<Locale, String> entry : atividadeNomeMap.entrySet()) {
			Locale locale = entry.getKey();
			String value = entry.getValue();

			if (Validator.isNotNull(value)) {
				availableLanguageIds.add(LocaleUtil.toLanguageId(locale));
			}
		}

		return availableLanguageIds.toArray(new String[availableLanguageIds.size()]);
	}

	@Override
	public String getDefaultLanguageId() {
		String xml = getAtividadeNome();

		if (xml == null) {
			return StringPool.BLANK;
		}

		return LocalizationUtil.getDefaultLanguageId(xml);
	}

	@Override
	public void prepareLocalizedFieldsForImport() throws LocaleException {
		prepareLocalizedFieldsForImport(null);
	}

	@Override
	@SuppressWarnings("unused")
	public void prepareLocalizedFieldsForImport(Locale defaultImportLocale)
		throws LocaleException {
		Locale defaultLocale = LocaleUtil.getDefault();

		String modelDefaultLanguageId = getDefaultLanguageId();

		String atividadeNome = getAtividadeNome(defaultLocale);

		if (Validator.isNull(atividadeNome)) {
			setAtividadeNome(getAtividadeNome(modelDefaultLanguageId),
				defaultLocale);
		}
		else {
			setAtividadeNome(getAtividadeNome(defaultLocale), defaultLocale,
				defaultLocale);
		}
	}

	@Override
	public AcademiaHorario toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (AcademiaHorario)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AcademiaHorarioImpl academiaHorarioImpl = new AcademiaHorarioImpl();

		academiaHorarioImpl.setUuid(getUuid());
		academiaHorarioImpl.setAcademiaHorarioId(getAcademiaHorarioId());
		academiaHorarioImpl.setCompanyId(getCompanyId());
		academiaHorarioImpl.setGroupId(getGroupId());
		academiaHorarioImpl.setCreateUserId(getCreateUserId());
		academiaHorarioImpl.setModifiedUserId(getModifiedUserId());
		academiaHorarioImpl.setCreateDate(getCreateDate());
		academiaHorarioImpl.setModifiedDate(getModifiedDate());
		academiaHorarioImpl.setDiaSemana(getDiaSemana());
		academiaHorarioImpl.setHoraInicial(getHoraInicial());
		academiaHorarioImpl.setHoraFinal(getHoraFinal());
		academiaHorarioImpl.setAtividadeId(getAtividadeId());
		academiaHorarioImpl.setAtividadeNome(getAtividadeNome());
		academiaHorarioImpl.setVersao(getVersao());

		academiaHorarioImpl.resetOriginalValues();

		return academiaHorarioImpl;
	}

	@Override
	public int compareTo(AcademiaHorario academiaHorario) {
		int value = 0;

		value = getAtividadeNome().compareTo(academiaHorario.getAtividadeNome());

		if (value != 0) {
			return value;
		}

		if (getDiaSemana() < academiaHorario.getDiaSemana()) {
			value = -1;
		}
		else if (getDiaSemana() > academiaHorario.getDiaSemana()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		value = getHoraInicial().compareTo(academiaHorario.getHoraInicial());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof AcademiaHorario)) {
			return false;
		}

		AcademiaHorario academiaHorario = (AcademiaHorario)obj;

		long primaryKey = academiaHorario.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		AcademiaHorarioModelImpl academiaHorarioModelImpl = this;

		academiaHorarioModelImpl._originalUuid = academiaHorarioModelImpl._uuid;

		academiaHorarioModelImpl._originalCompanyId = academiaHorarioModelImpl._companyId;

		academiaHorarioModelImpl._setOriginalCompanyId = false;

		academiaHorarioModelImpl._originalGroupId = academiaHorarioModelImpl._groupId;

		academiaHorarioModelImpl._setOriginalGroupId = false;

		academiaHorarioModelImpl._originalDiaSemana = academiaHorarioModelImpl._diaSemana;

		academiaHorarioModelImpl._setOriginalDiaSemana = false;

		academiaHorarioModelImpl._originalHoraInicial = academiaHorarioModelImpl._horaInicial;

		academiaHorarioModelImpl._originalAtividadeId = academiaHorarioModelImpl._atividadeId;

		academiaHorarioModelImpl._setOriginalAtividadeId = false;

		academiaHorarioModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<AcademiaHorario> toCacheModel() {
		AcademiaHorarioCacheModel academiaHorarioCacheModel = new AcademiaHorarioCacheModel();

		academiaHorarioCacheModel.uuid = getUuid();

		String uuid = academiaHorarioCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			academiaHorarioCacheModel.uuid = null;
		}

		academiaHorarioCacheModel.academiaHorarioId = getAcademiaHorarioId();

		academiaHorarioCacheModel.companyId = getCompanyId();

		academiaHorarioCacheModel.groupId = getGroupId();

		academiaHorarioCacheModel.createUserId = getCreateUserId();

		academiaHorarioCacheModel.modifiedUserId = getModifiedUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			academiaHorarioCacheModel.createDate = createDate.getTime();
		}
		else {
			academiaHorarioCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			academiaHorarioCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			academiaHorarioCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		academiaHorarioCacheModel.diaSemana = getDiaSemana();

		academiaHorarioCacheModel.horaInicial = getHoraInicial();

		String horaInicial = academiaHorarioCacheModel.horaInicial;

		if ((horaInicial != null) && (horaInicial.length() == 0)) {
			academiaHorarioCacheModel.horaInicial = null;
		}

		academiaHorarioCacheModel.HoraFinal = getHoraFinal();

		String HoraFinal = academiaHorarioCacheModel.HoraFinal;

		if ((HoraFinal != null) && (HoraFinal.length() == 0)) {
			academiaHorarioCacheModel.HoraFinal = null;
		}

		academiaHorarioCacheModel.atividadeId = getAtividadeId();

		academiaHorarioCacheModel.atividadeNome = getAtividadeNome();

		String atividadeNome = academiaHorarioCacheModel.atividadeNome;

		if ((atividadeNome != null) && (atividadeNome.length() == 0)) {
			academiaHorarioCacheModel.atividadeNome = null;
		}

		academiaHorarioCacheModel.versao = getVersao();

		return academiaHorarioCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", academiaHorarioId=");
		sb.append(getAcademiaHorarioId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", createUserId=");
		sb.append(getCreateUserId());
		sb.append(", modifiedUserId=");
		sb.append(getModifiedUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", diaSemana=");
		sb.append(getDiaSemana());
		sb.append(", horaInicial=");
		sb.append(getHoraInicial());
		sb.append(", HoraFinal=");
		sb.append(getHoraFinal());
		sb.append(", atividadeId=");
		sb.append(getAtividadeId());
		sb.append(", atividadeNome=");
		sb.append(getAtividadeNome());
		sb.append(", versao=");
		sb.append(getVersao());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("br.com.prodevelopment.academiahorario.model.AcademiaHorario");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>academiaHorarioId</column-name><column-value><![CDATA[");
		sb.append(getAcademiaHorarioId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createUserId</column-name><column-value><![CDATA[");
		sb.append(getCreateUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedUserId</column-name><column-value><![CDATA[");
		sb.append(getModifiedUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>diaSemana</column-name><column-value><![CDATA[");
		sb.append(getDiaSemana());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>horaInicial</column-name><column-value><![CDATA[");
		sb.append(getHoraInicial());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>HoraFinal</column-name><column-value><![CDATA[");
		sb.append(getHoraFinal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>atividadeId</column-name><column-value><![CDATA[");
		sb.append(getAtividadeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>atividadeNome</column-name><column-value><![CDATA[");
		sb.append(getAtividadeNome());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>versao</column-name><column-value><![CDATA[");
		sb.append(getVersao());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = AcademiaHorario.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			AcademiaHorario.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _academiaHorarioId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _createUserId;
	private String _createUserUuid;
	private long _modifiedUserId;
	private String _modifiedUserUuid;
	private Date _createDate;
	private Date _modifiedDate;
	private int _diaSemana;
	private int _originalDiaSemana;
	private boolean _setOriginalDiaSemana;
	private String _horaInicial;
	private String _originalHoraInicial;
	private String _HoraFinal;
	private long _atividadeId;
	private long _originalAtividadeId;
	private boolean _setOriginalAtividadeId;
	private String _atividadeNome;
	private String _atividadeNomeCurrentLanguageId;
	private double _versao;
	private long _columnBitmask;
	private AcademiaHorario _escapedModel;
}