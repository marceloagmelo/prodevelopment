/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package br.com.prodevelopment.contato.model.impl;

import br.com.prodevelopment.contato.model.Telefone;
import br.com.prodevelopment.contato.model.TelefoneModel;
import br.com.prodevelopment.contato.model.TelefoneSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.kernel.util.Validator;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Telefone service. Represents a row in the &quot;Telefone&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link br.com.prodevelopment.contato.model.TelefoneModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TelefoneImpl}.
 * </p>
 *
 * @author marcelo
 * @see TelefoneImpl
 * @see br.com.prodevelopment.contato.model.Telefone
 * @see br.com.prodevelopment.contato.model.TelefoneModel
 * @generated
 */
@JSON(strict = true)
public class TelefoneModelImpl extends BaseModelImpl<Telefone>
	implements TelefoneModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a telefone model instance should use the {@link br.com.prodevelopment.contato.model.Telefone} interface instead.
	 */
	public static final String TABLE_NAME = "Telefone";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "telefoneId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "createUserId", Types.BIGINT },
			{ "modifiedUserId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "classNameId", Types.BIGINT },
			{ "classPK", Types.BIGINT },
			{ "ddi", Types.VARCHAR },
			{ "ddd", Types.VARCHAR },
			{ "numero", Types.VARCHAR },
			{ "ramal", Types.VARCHAR },
			{ "tipo", Types.INTEGER },
			{ "principal", Types.BOOLEAN }
		};
	public static final String TABLE_SQL_CREATE = "create table Telefone (uuid_ VARCHAR(75) null,telefoneId LONG not null primary key,companyId LONG,groupId LONG,createUserId LONG,modifiedUserId LONG,createDate DATE null,modifiedDate DATE null,classNameId LONG,classPK LONG,ddi VARCHAR(75) null,ddd VARCHAR(75) null,numero VARCHAR(75) null,ramal VARCHAR(75) null,tipo INTEGER,principal BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table Telefone";
	public static final String ORDER_BY_JPQL = " ORDER BY telefone.createDate ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Telefone.createDate ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.br.com.prodevelopment.contato.model.Telefone"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.br.com.prodevelopment.contato.model.Telefone"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.br.com.prodevelopment.contato.model.Telefone"),
			true);
	public static long CLASSNAMEID_COLUMN_BITMASK = 1L;
	public static long CLASSPK_COLUMN_BITMASK = 2L;
	public static long COMPANYID_COLUMN_BITMASK = 4L;
	public static long GROUPID_COLUMN_BITMASK = 8L;
	public static long PRINCIPAL_COLUMN_BITMASK = 16L;
	public static long UUID_COLUMN_BITMASK = 32L;
	public static long CREATEDATE_COLUMN_BITMASK = 64L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Telefone toModel(TelefoneSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Telefone model = new TelefoneImpl();

		model.setUuid(soapModel.getUuid());
		model.setTelefoneId(soapModel.getTelefoneId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setCreateUserId(soapModel.getCreateUserId());
		model.setModifiedUserId(soapModel.getModifiedUserId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setClassNameId(soapModel.getClassNameId());
		model.setClassPK(soapModel.getClassPK());
		model.setDdi(soapModel.getDdi());
		model.setDdd(soapModel.getDdd());
		model.setNumero(soapModel.getNumero());
		model.setRamal(soapModel.getRamal());
		model.setTipo(soapModel.getTipo());
		model.setPrincipal(soapModel.getPrincipal());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Telefone> toModels(TelefoneSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Telefone> models = new ArrayList<Telefone>(soapModels.length);

		for (TelefoneSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.br.com.prodevelopment.contato.model.Telefone"));

	public TelefoneModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _telefoneId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setTelefoneId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _telefoneId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Telefone.class;
	}

	@Override
	public String getModelClassName() {
		return Telefone.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("telefoneId", getTelefoneId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("createUserId", getCreateUserId());
		attributes.put("modifiedUserId", getModifiedUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("classNameId", getClassNameId());
		attributes.put("classPK", getClassPK());
		attributes.put("ddi", getDdi());
		attributes.put("ddd", getDdd());
		attributes.put("numero", getNumero());
		attributes.put("ramal", getRamal());
		attributes.put("tipo", getTipo());
		attributes.put("principal", getPrincipal());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long telefoneId = (Long)attributes.get("telefoneId");

		if (telefoneId != null) {
			setTelefoneId(telefoneId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long createUserId = (Long)attributes.get("createUserId");

		if (createUserId != null) {
			setCreateUserId(createUserId);
		}

		Long modifiedUserId = (Long)attributes.get("modifiedUserId");

		if (modifiedUserId != null) {
			setModifiedUserId(modifiedUserId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long classNameId = (Long)attributes.get("classNameId");

		if (classNameId != null) {
			setClassNameId(classNameId);
		}

		Long classPK = (Long)attributes.get("classPK");

		if (classPK != null) {
			setClassPK(classPK);
		}

		String ddi = (String)attributes.get("ddi");

		if (ddi != null) {
			setDdi(ddi);
		}

		String ddd = (String)attributes.get("ddd");

		if (ddd != null) {
			setDdd(ddd);
		}

		String numero = (String)attributes.get("numero");

		if (numero != null) {
			setNumero(numero);
		}

		String ramal = (String)attributes.get("ramal");

		if (ramal != null) {
			setRamal(ramal);
		}

		Integer tipo = (Integer)attributes.get("tipo");

		if (tipo != null) {
			setTipo(tipo);
		}

		Boolean principal = (Boolean)attributes.get("principal");

		if (principal != null) {
			setPrincipal(principal);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getTelefoneId() {
		return _telefoneId;
	}

	@Override
	public void setTelefoneId(long telefoneId) {
		_telefoneId = telefoneId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCreateUserId() {
		return _createUserId;
	}

	@Override
	public void setCreateUserId(long createUserId) {
		_createUserId = createUserId;
	}

	@Override
	public String getCreateUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getCreateUserId(), "uuid",
			_createUserUuid);
	}

	@Override
	public void setCreateUserUuid(String createUserUuid) {
		_createUserUuid = createUserUuid;
	}

	@JSON
	@Override
	public long getModifiedUserId() {
		return _modifiedUserId;
	}

	@Override
	public void setModifiedUserId(long modifiedUserId) {
		_modifiedUserId = modifiedUserId;
	}

	@Override
	public String getModifiedUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getModifiedUserId(), "uuid",
			_modifiedUserUuid);
	}

	@Override
	public void setModifiedUserUuid(String modifiedUserUuid) {
		_modifiedUserUuid = modifiedUserUuid;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getClassName() {
		if (getClassNameId() <= 0) {
			return StringPool.BLANK;
		}

		return PortalUtil.getClassName(getClassNameId());
	}

	@Override
	public void setClassName(String className) {
		long classNameId = 0;

		if (Validator.isNotNull(className)) {
			classNameId = PortalUtil.getClassNameId(className);
		}

		setClassNameId(classNameId);
	}

	@JSON
	@Override
	public long getClassNameId() {
		return _classNameId;
	}

	@Override
	public void setClassNameId(long classNameId) {
		_columnBitmask |= CLASSNAMEID_COLUMN_BITMASK;

		if (!_setOriginalClassNameId) {
			_setOriginalClassNameId = true;

			_originalClassNameId = _classNameId;
		}

		_classNameId = classNameId;
	}

	public long getOriginalClassNameId() {
		return _originalClassNameId;
	}

	@JSON
	@Override
	public long getClassPK() {
		return _classPK;
	}

	@Override
	public void setClassPK(long classPK) {
		_columnBitmask |= CLASSPK_COLUMN_BITMASK;

		if (!_setOriginalClassPK) {
			_setOriginalClassPK = true;

			_originalClassPK = _classPK;
		}

		_classPK = classPK;
	}

	public long getOriginalClassPK() {
		return _originalClassPK;
	}

	@JSON
	@Override
	public String getDdi() {
		if (_ddi == null) {
			return StringPool.BLANK;
		}
		else {
			return _ddi;
		}
	}

	@Override
	public void setDdi(String ddi) {
		_ddi = ddi;
	}

	@JSON
	@Override
	public String getDdd() {
		if (_ddd == null) {
			return StringPool.BLANK;
		}
		else {
			return _ddd;
		}
	}

	@Override
	public void setDdd(String ddd) {
		_ddd = ddd;
	}

	@JSON
	@Override
	public String getNumero() {
		if (_numero == null) {
			return StringPool.BLANK;
		}
		else {
			return _numero;
		}
	}

	@Override
	public void setNumero(String numero) {
		_numero = numero;
	}

	@JSON
	@Override
	public String getRamal() {
		if (_ramal == null) {
			return StringPool.BLANK;
		}
		else {
			return _ramal;
		}
	}

	@Override
	public void setRamal(String ramal) {
		_ramal = ramal;
	}

	@JSON
	@Override
	public int getTipo() {
		return _tipo;
	}

	@Override
	public void setTipo(int tipo) {
		_tipo = tipo;
	}

	@JSON
	@Override
	public boolean getPrincipal() {
		return _principal;
	}

	@Override
	public boolean isPrincipal() {
		return _principal;
	}

	@Override
	public void setPrincipal(boolean principal) {
		_columnBitmask |= PRINCIPAL_COLUMN_BITMASK;

		if (!_setOriginalPrincipal) {
			_setOriginalPrincipal = true;

			_originalPrincipal = _principal;
		}

		_principal = principal;
	}

	public boolean getOriginalPrincipal() {
		return _originalPrincipal;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				Telefone.class.getName()), getClassNameId());
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Telefone.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Telefone toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Telefone)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TelefoneImpl telefoneImpl = new TelefoneImpl();

		telefoneImpl.setUuid(getUuid());
		telefoneImpl.setTelefoneId(getTelefoneId());
		telefoneImpl.setCompanyId(getCompanyId());
		telefoneImpl.setGroupId(getGroupId());
		telefoneImpl.setCreateUserId(getCreateUserId());
		telefoneImpl.setModifiedUserId(getModifiedUserId());
		telefoneImpl.setCreateDate(getCreateDate());
		telefoneImpl.setModifiedDate(getModifiedDate());
		telefoneImpl.setClassNameId(getClassNameId());
		telefoneImpl.setClassPK(getClassPK());
		telefoneImpl.setDdi(getDdi());
		telefoneImpl.setDdd(getDdd());
		telefoneImpl.setNumero(getNumero());
		telefoneImpl.setRamal(getRamal());
		telefoneImpl.setTipo(getTipo());
		telefoneImpl.setPrincipal(getPrincipal());

		telefoneImpl.resetOriginalValues();

		return telefoneImpl;
	}

	@Override
	public int compareTo(Telefone telefone) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(), telefone.getCreateDate());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Telefone)) {
			return false;
		}

		Telefone telefone = (Telefone)obj;

		long primaryKey = telefone.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		TelefoneModelImpl telefoneModelImpl = this;

		telefoneModelImpl._originalUuid = telefoneModelImpl._uuid;

		telefoneModelImpl._originalCompanyId = telefoneModelImpl._companyId;

		telefoneModelImpl._setOriginalCompanyId = false;

		telefoneModelImpl._originalGroupId = telefoneModelImpl._groupId;

		telefoneModelImpl._setOriginalGroupId = false;

		telefoneModelImpl._originalClassNameId = telefoneModelImpl._classNameId;

		telefoneModelImpl._setOriginalClassNameId = false;

		telefoneModelImpl._originalClassPK = telefoneModelImpl._classPK;

		telefoneModelImpl._setOriginalClassPK = false;

		telefoneModelImpl._originalPrincipal = telefoneModelImpl._principal;

		telefoneModelImpl._setOriginalPrincipal = false;

		telefoneModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Telefone> toCacheModel() {
		TelefoneCacheModel telefoneCacheModel = new TelefoneCacheModel();

		telefoneCacheModel.uuid = getUuid();

		String uuid = telefoneCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			telefoneCacheModel.uuid = null;
		}

		telefoneCacheModel.telefoneId = getTelefoneId();

		telefoneCacheModel.companyId = getCompanyId();

		telefoneCacheModel.groupId = getGroupId();

		telefoneCacheModel.createUserId = getCreateUserId();

		telefoneCacheModel.modifiedUserId = getModifiedUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			telefoneCacheModel.createDate = createDate.getTime();
		}
		else {
			telefoneCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			telefoneCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			telefoneCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		telefoneCacheModel.classNameId = getClassNameId();

		telefoneCacheModel.classPK = getClassPK();

		telefoneCacheModel.ddi = getDdi();

		String ddi = telefoneCacheModel.ddi;

		if ((ddi != null) && (ddi.length() == 0)) {
			telefoneCacheModel.ddi = null;
		}

		telefoneCacheModel.ddd = getDdd();

		String ddd = telefoneCacheModel.ddd;

		if ((ddd != null) && (ddd.length() == 0)) {
			telefoneCacheModel.ddd = null;
		}

		telefoneCacheModel.numero = getNumero();

		String numero = telefoneCacheModel.numero;

		if ((numero != null) && (numero.length() == 0)) {
			telefoneCacheModel.numero = null;
		}

		telefoneCacheModel.ramal = getRamal();

		String ramal = telefoneCacheModel.ramal;

		if ((ramal != null) && (ramal.length() == 0)) {
			telefoneCacheModel.ramal = null;
		}

		telefoneCacheModel.tipo = getTipo();

		telefoneCacheModel.principal = getPrincipal();

		return telefoneCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(33);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", telefoneId=");
		sb.append(getTelefoneId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", createUserId=");
		sb.append(getCreateUserId());
		sb.append(", modifiedUserId=");
		sb.append(getModifiedUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", classNameId=");
		sb.append(getClassNameId());
		sb.append(", classPK=");
		sb.append(getClassPK());
		sb.append(", ddi=");
		sb.append(getDdi());
		sb.append(", ddd=");
		sb.append(getDdd());
		sb.append(", numero=");
		sb.append(getNumero());
		sb.append(", ramal=");
		sb.append(getRamal());
		sb.append(", tipo=");
		sb.append(getTipo());
		sb.append(", principal=");
		sb.append(getPrincipal());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(52);

		sb.append("<model><model-name>");
		sb.append("br.com.prodevelopment.contato.model.Telefone");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>telefoneId</column-name><column-value><![CDATA[");
		sb.append(getTelefoneId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createUserId</column-name><column-value><![CDATA[");
		sb.append(getCreateUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedUserId</column-name><column-value><![CDATA[");
		sb.append(getModifiedUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>classNameId</column-name><column-value><![CDATA[");
		sb.append(getClassNameId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>classPK</column-name><column-value><![CDATA[");
		sb.append(getClassPK());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ddi</column-name><column-value><![CDATA[");
		sb.append(getDdi());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ddd</column-name><column-value><![CDATA[");
		sb.append(getDdd());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>numero</column-name><column-value><![CDATA[");
		sb.append(getNumero());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ramal</column-name><column-value><![CDATA[");
		sb.append(getRamal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tipo</column-name><column-value><![CDATA[");
		sb.append(getTipo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>principal</column-name><column-value><![CDATA[");
		sb.append(getPrincipal());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Telefone.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Telefone.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _telefoneId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _createUserId;
	private String _createUserUuid;
	private long _modifiedUserId;
	private String _modifiedUserUuid;
	private Date _createDate;
	private Date _modifiedDate;
	private long _classNameId;
	private long _originalClassNameId;
	private boolean _setOriginalClassNameId;
	private long _classPK;
	private long _originalClassPK;
	private boolean _setOriginalClassPK;
	private String _ddi;
	private String _ddd;
	private String _numero;
	private String _ramal;
	private int _tipo;
	private boolean _principal;
	private boolean _originalPrincipal;
	private boolean _setOriginalPrincipal;
	private long _columnBitmask;
	private Telefone _escapedModel;
}