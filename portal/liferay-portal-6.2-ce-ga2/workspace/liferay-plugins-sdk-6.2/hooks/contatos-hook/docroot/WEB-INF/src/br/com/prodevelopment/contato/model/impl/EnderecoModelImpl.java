/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package br.com.prodevelopment.contato.model.impl;

import br.com.prodevelopment.contato.model.Endereco;
import br.com.prodevelopment.contato.model.EnderecoModel;
import br.com.prodevelopment.contato.model.EnderecoSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.kernel.util.Validator;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Endereco service. Represents a row in the &quot;Endereco&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link br.com.prodevelopment.contato.model.EnderecoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EnderecoImpl}.
 * </p>
 *
 * @author marcelo
 * @see EnderecoImpl
 * @see br.com.prodevelopment.contato.model.Endereco
 * @see br.com.prodevelopment.contato.model.EnderecoModel
 * @generated
 */
@JSON(strict = true)
public class EnderecoModelImpl extends BaseModelImpl<Endereco>
	implements EnderecoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a endereco model instance should use the {@link br.com.prodevelopment.contato.model.Endereco} interface instead.
	 */
	public static final String TABLE_NAME = "Endereco";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "enderecoId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "createUserId", Types.BIGINT },
			{ "modifiedUserId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "classNameId", Types.BIGINT },
			{ "classPK", Types.BIGINT },
			{ "logradouro", Types.VARCHAR },
			{ "numero", Types.VARCHAR },
			{ "complemento", Types.VARCHAR },
			{ "cep", Types.VARCHAR },
			{ "bairro", Types.VARCHAR },
			{ "cidadeId", Types.BIGINT },
			{ "uf", Types.VARCHAR },
			{ "paisId", Types.BIGINT },
			{ "principal", Types.BOOLEAN },
			{ "tipo", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table Endereco (uuid_ VARCHAR(75) null,enderecoId LONG not null primary key,companyId LONG,groupId LONG,createUserId LONG,modifiedUserId LONG,createDate DATE null,modifiedDate DATE null,classNameId LONG,classPK LONG,logradouro VARCHAR(75) null,numero VARCHAR(75) null,complemento VARCHAR(75) null,cep VARCHAR(75) null,bairro VARCHAR(75) null,cidadeId LONG,uf VARCHAR(75) null,paisId LONG,principal BOOLEAN,tipo INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table Endereco";
	public static final String ORDER_BY_JPQL = " ORDER BY endereco.createDate ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Endereco.createDate ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.br.com.prodevelopment.contato.model.Endereco"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.br.com.prodevelopment.contato.model.Endereco"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.br.com.prodevelopment.contato.model.Endereco"),
			true);
	public static long BAIRRO_COLUMN_BITMASK = 1L;
	public static long CEP_COLUMN_BITMASK = 2L;
	public static long CIDADEID_COLUMN_BITMASK = 4L;
	public static long CLASSNAMEID_COLUMN_BITMASK = 8L;
	public static long CLASSPK_COLUMN_BITMASK = 16L;
	public static long COMPANYID_COLUMN_BITMASK = 32L;
	public static long GROUPID_COLUMN_BITMASK = 64L;
	public static long PAISID_COLUMN_BITMASK = 128L;
	public static long PRINCIPAL_COLUMN_BITMASK = 256L;
	public static long UF_COLUMN_BITMASK = 512L;
	public static long UUID_COLUMN_BITMASK = 1024L;
	public static long CREATEDATE_COLUMN_BITMASK = 2048L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Endereco toModel(EnderecoSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Endereco model = new EnderecoImpl();

		model.setUuid(soapModel.getUuid());
		model.setEnderecoId(soapModel.getEnderecoId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setCreateUserId(soapModel.getCreateUserId());
		model.setModifiedUserId(soapModel.getModifiedUserId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setClassNameId(soapModel.getClassNameId());
		model.setClassPK(soapModel.getClassPK());
		model.setLogradouro(soapModel.getLogradouro());
		model.setNumero(soapModel.getNumero());
		model.setComplemento(soapModel.getComplemento());
		model.setCep(soapModel.getCep());
		model.setBairro(soapModel.getBairro());
		model.setCidadeId(soapModel.getCidadeId());
		model.setUf(soapModel.getUf());
		model.setPaisId(soapModel.getPaisId());
		model.setPrincipal(soapModel.getPrincipal());
		model.setTipo(soapModel.getTipo());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Endereco> toModels(EnderecoSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Endereco> models = new ArrayList<Endereco>(soapModels.length);

		for (EnderecoSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.br.com.prodevelopment.contato.model.Endereco"));

	public EnderecoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _enderecoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEnderecoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _enderecoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Endereco.class;
	}

	@Override
	public String getModelClassName() {
		return Endereco.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("enderecoId", getEnderecoId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("createUserId", getCreateUserId());
		attributes.put("modifiedUserId", getModifiedUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("classNameId", getClassNameId());
		attributes.put("classPK", getClassPK());
		attributes.put("logradouro", getLogradouro());
		attributes.put("numero", getNumero());
		attributes.put("complemento", getComplemento());
		attributes.put("cep", getCep());
		attributes.put("bairro", getBairro());
		attributes.put("cidadeId", getCidadeId());
		attributes.put("uf", getUf());
		attributes.put("paisId", getPaisId());
		attributes.put("principal", getPrincipal());
		attributes.put("tipo", getTipo());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long enderecoId = (Long)attributes.get("enderecoId");

		if (enderecoId != null) {
			setEnderecoId(enderecoId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long createUserId = (Long)attributes.get("createUserId");

		if (createUserId != null) {
			setCreateUserId(createUserId);
		}

		Long modifiedUserId = (Long)attributes.get("modifiedUserId");

		if (modifiedUserId != null) {
			setModifiedUserId(modifiedUserId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long classNameId = (Long)attributes.get("classNameId");

		if (classNameId != null) {
			setClassNameId(classNameId);
		}

		Long classPK = (Long)attributes.get("classPK");

		if (classPK != null) {
			setClassPK(classPK);
		}

		String logradouro = (String)attributes.get("logradouro");

		if (logradouro != null) {
			setLogradouro(logradouro);
		}

		String numero = (String)attributes.get("numero");

		if (numero != null) {
			setNumero(numero);
		}

		String complemento = (String)attributes.get("complemento");

		if (complemento != null) {
			setComplemento(complemento);
		}

		String cep = (String)attributes.get("cep");

		if (cep != null) {
			setCep(cep);
		}

		String bairro = (String)attributes.get("bairro");

		if (bairro != null) {
			setBairro(bairro);
		}

		Long cidadeId = (Long)attributes.get("cidadeId");

		if (cidadeId != null) {
			setCidadeId(cidadeId);
		}

		String uf = (String)attributes.get("uf");

		if (uf != null) {
			setUf(uf);
		}

		Long paisId = (Long)attributes.get("paisId");

		if (paisId != null) {
			setPaisId(paisId);
		}

		Boolean principal = (Boolean)attributes.get("principal");

		if (principal != null) {
			setPrincipal(principal);
		}

		Integer tipo = (Integer)attributes.get("tipo");

		if (tipo != null) {
			setTipo(tipo);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getEnderecoId() {
		return _enderecoId;
	}

	@Override
	public void setEnderecoId(long enderecoId) {
		_enderecoId = enderecoId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCreateUserId() {
		return _createUserId;
	}

	@Override
	public void setCreateUserId(long createUserId) {
		_createUserId = createUserId;
	}

	@Override
	public String getCreateUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getCreateUserId(), "uuid",
			_createUserUuid);
	}

	@Override
	public void setCreateUserUuid(String createUserUuid) {
		_createUserUuid = createUserUuid;
	}

	@JSON
	@Override
	public long getModifiedUserId() {
		return _modifiedUserId;
	}

	@Override
	public void setModifiedUserId(long modifiedUserId) {
		_modifiedUserId = modifiedUserId;
	}

	@Override
	public String getModifiedUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getModifiedUserId(), "uuid",
			_modifiedUserUuid);
	}

	@Override
	public void setModifiedUserUuid(String modifiedUserUuid) {
		_modifiedUserUuid = modifiedUserUuid;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getClassName() {
		if (getClassNameId() <= 0) {
			return StringPool.BLANK;
		}

		return PortalUtil.getClassName(getClassNameId());
	}

	@Override
	public void setClassName(String className) {
		long classNameId = 0;

		if (Validator.isNotNull(className)) {
			classNameId = PortalUtil.getClassNameId(className);
		}

		setClassNameId(classNameId);
	}

	@JSON
	@Override
	public long getClassNameId() {
		return _classNameId;
	}

	@Override
	public void setClassNameId(long classNameId) {
		_columnBitmask |= CLASSNAMEID_COLUMN_BITMASK;

		if (!_setOriginalClassNameId) {
			_setOriginalClassNameId = true;

			_originalClassNameId = _classNameId;
		}

		_classNameId = classNameId;
	}

	public long getOriginalClassNameId() {
		return _originalClassNameId;
	}

	@JSON
	@Override
	public long getClassPK() {
		return _classPK;
	}

	@Override
	public void setClassPK(long classPK) {
		_columnBitmask |= CLASSPK_COLUMN_BITMASK;

		if (!_setOriginalClassPK) {
			_setOriginalClassPK = true;

			_originalClassPK = _classPK;
		}

		_classPK = classPK;
	}

	public long getOriginalClassPK() {
		return _originalClassPK;
	}

	@JSON
	@Override
	public String getLogradouro() {
		if (_logradouro == null) {
			return StringPool.BLANK;
		}
		else {
			return _logradouro;
		}
	}

	@Override
	public void setLogradouro(String logradouro) {
		_logradouro = logradouro;
	}

	@JSON
	@Override
	public String getNumero() {
		if (_numero == null) {
			return StringPool.BLANK;
		}
		else {
			return _numero;
		}
	}

	@Override
	public void setNumero(String numero) {
		_numero = numero;
	}

	@JSON
	@Override
	public String getComplemento() {
		if (_complemento == null) {
			return StringPool.BLANK;
		}
		else {
			return _complemento;
		}
	}

	@Override
	public void setComplemento(String complemento) {
		_complemento = complemento;
	}

	@JSON
	@Override
	public String getCep() {
		if (_cep == null) {
			return StringPool.BLANK;
		}
		else {
			return _cep;
		}
	}

	@Override
	public void setCep(String cep) {
		_columnBitmask |= CEP_COLUMN_BITMASK;

		if (_originalCep == null) {
			_originalCep = _cep;
		}

		_cep = cep;
	}

	public String getOriginalCep() {
		return GetterUtil.getString(_originalCep);
	}

	@JSON
	@Override
	public String getBairro() {
		if (_bairro == null) {
			return StringPool.BLANK;
		}
		else {
			return _bairro;
		}
	}

	@Override
	public void setBairro(String bairro) {
		_columnBitmask |= BAIRRO_COLUMN_BITMASK;

		if (_originalBairro == null) {
			_originalBairro = _bairro;
		}

		_bairro = bairro;
	}

	public String getOriginalBairro() {
		return GetterUtil.getString(_originalBairro);
	}

	@JSON
	@Override
	public long getCidadeId() {
		return _cidadeId;
	}

	@Override
	public void setCidadeId(long cidadeId) {
		_columnBitmask |= CIDADEID_COLUMN_BITMASK;

		if (!_setOriginalCidadeId) {
			_setOriginalCidadeId = true;

			_originalCidadeId = _cidadeId;
		}

		_cidadeId = cidadeId;
	}

	public long getOriginalCidadeId() {
		return _originalCidadeId;
	}

	@JSON
	@Override
	public String getUf() {
		if (_uf == null) {
			return StringPool.BLANK;
		}
		else {
			return _uf;
		}
	}

	@Override
	public void setUf(String uf) {
		_columnBitmask |= UF_COLUMN_BITMASK;

		if (_originalUf == null) {
			_originalUf = _uf;
		}

		_uf = uf;
	}

	public String getOriginalUf() {
		return GetterUtil.getString(_originalUf);
	}

	@JSON
	@Override
	public long getPaisId() {
		return _paisId;
	}

	@Override
	public void setPaisId(long paisId) {
		_columnBitmask |= PAISID_COLUMN_BITMASK;

		if (!_setOriginalPaisId) {
			_setOriginalPaisId = true;

			_originalPaisId = _paisId;
		}

		_paisId = paisId;
	}

	public long getOriginalPaisId() {
		return _originalPaisId;
	}

	@JSON
	@Override
	public boolean getPrincipal() {
		return _principal;
	}

	@Override
	public boolean isPrincipal() {
		return _principal;
	}

	@Override
	public void setPrincipal(boolean principal) {
		_columnBitmask |= PRINCIPAL_COLUMN_BITMASK;

		if (!_setOriginalPrincipal) {
			_setOriginalPrincipal = true;

			_originalPrincipal = _principal;
		}

		_principal = principal;
	}

	public boolean getOriginalPrincipal() {
		return _originalPrincipal;
	}

	@JSON
	@Override
	public int getTipo() {
		return _tipo;
	}

	@Override
	public void setTipo(int tipo) {
		_tipo = tipo;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				Endereco.class.getName()), getClassNameId());
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Endereco.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Endereco toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Endereco)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EnderecoImpl enderecoImpl = new EnderecoImpl();

		enderecoImpl.setUuid(getUuid());
		enderecoImpl.setEnderecoId(getEnderecoId());
		enderecoImpl.setCompanyId(getCompanyId());
		enderecoImpl.setGroupId(getGroupId());
		enderecoImpl.setCreateUserId(getCreateUserId());
		enderecoImpl.setModifiedUserId(getModifiedUserId());
		enderecoImpl.setCreateDate(getCreateDate());
		enderecoImpl.setModifiedDate(getModifiedDate());
		enderecoImpl.setClassNameId(getClassNameId());
		enderecoImpl.setClassPK(getClassPK());
		enderecoImpl.setLogradouro(getLogradouro());
		enderecoImpl.setNumero(getNumero());
		enderecoImpl.setComplemento(getComplemento());
		enderecoImpl.setCep(getCep());
		enderecoImpl.setBairro(getBairro());
		enderecoImpl.setCidadeId(getCidadeId());
		enderecoImpl.setUf(getUf());
		enderecoImpl.setPaisId(getPaisId());
		enderecoImpl.setPrincipal(getPrincipal());
		enderecoImpl.setTipo(getTipo());

		enderecoImpl.resetOriginalValues();

		return enderecoImpl;
	}

	@Override
	public int compareTo(Endereco endereco) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(), endereco.getCreateDate());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Endereco)) {
			return false;
		}

		Endereco endereco = (Endereco)obj;

		long primaryKey = endereco.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		EnderecoModelImpl enderecoModelImpl = this;

		enderecoModelImpl._originalUuid = enderecoModelImpl._uuid;

		enderecoModelImpl._originalCompanyId = enderecoModelImpl._companyId;

		enderecoModelImpl._setOriginalCompanyId = false;

		enderecoModelImpl._originalGroupId = enderecoModelImpl._groupId;

		enderecoModelImpl._setOriginalGroupId = false;

		enderecoModelImpl._originalClassNameId = enderecoModelImpl._classNameId;

		enderecoModelImpl._setOriginalClassNameId = false;

		enderecoModelImpl._originalClassPK = enderecoModelImpl._classPK;

		enderecoModelImpl._setOriginalClassPK = false;

		enderecoModelImpl._originalCep = enderecoModelImpl._cep;

		enderecoModelImpl._originalBairro = enderecoModelImpl._bairro;

		enderecoModelImpl._originalCidadeId = enderecoModelImpl._cidadeId;

		enderecoModelImpl._setOriginalCidadeId = false;

		enderecoModelImpl._originalUf = enderecoModelImpl._uf;

		enderecoModelImpl._originalPaisId = enderecoModelImpl._paisId;

		enderecoModelImpl._setOriginalPaisId = false;

		enderecoModelImpl._originalPrincipal = enderecoModelImpl._principal;

		enderecoModelImpl._setOriginalPrincipal = false;

		enderecoModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Endereco> toCacheModel() {
		EnderecoCacheModel enderecoCacheModel = new EnderecoCacheModel();

		enderecoCacheModel.uuid = getUuid();

		String uuid = enderecoCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			enderecoCacheModel.uuid = null;
		}

		enderecoCacheModel.enderecoId = getEnderecoId();

		enderecoCacheModel.companyId = getCompanyId();

		enderecoCacheModel.groupId = getGroupId();

		enderecoCacheModel.createUserId = getCreateUserId();

		enderecoCacheModel.modifiedUserId = getModifiedUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			enderecoCacheModel.createDate = createDate.getTime();
		}
		else {
			enderecoCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			enderecoCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			enderecoCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		enderecoCacheModel.classNameId = getClassNameId();

		enderecoCacheModel.classPK = getClassPK();

		enderecoCacheModel.logradouro = getLogradouro();

		String logradouro = enderecoCacheModel.logradouro;

		if ((logradouro != null) && (logradouro.length() == 0)) {
			enderecoCacheModel.logradouro = null;
		}

		enderecoCacheModel.numero = getNumero();

		String numero = enderecoCacheModel.numero;

		if ((numero != null) && (numero.length() == 0)) {
			enderecoCacheModel.numero = null;
		}

		enderecoCacheModel.complemento = getComplemento();

		String complemento = enderecoCacheModel.complemento;

		if ((complemento != null) && (complemento.length() == 0)) {
			enderecoCacheModel.complemento = null;
		}

		enderecoCacheModel.cep = getCep();

		String cep = enderecoCacheModel.cep;

		if ((cep != null) && (cep.length() == 0)) {
			enderecoCacheModel.cep = null;
		}

		enderecoCacheModel.bairro = getBairro();

		String bairro = enderecoCacheModel.bairro;

		if ((bairro != null) && (bairro.length() == 0)) {
			enderecoCacheModel.bairro = null;
		}

		enderecoCacheModel.cidadeId = getCidadeId();

		enderecoCacheModel.uf = getUf();

		String uf = enderecoCacheModel.uf;

		if ((uf != null) && (uf.length() == 0)) {
			enderecoCacheModel.uf = null;
		}

		enderecoCacheModel.paisId = getPaisId();

		enderecoCacheModel.principal = getPrincipal();

		enderecoCacheModel.tipo = getTipo();

		return enderecoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(41);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", enderecoId=");
		sb.append(getEnderecoId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", createUserId=");
		sb.append(getCreateUserId());
		sb.append(", modifiedUserId=");
		sb.append(getModifiedUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", classNameId=");
		sb.append(getClassNameId());
		sb.append(", classPK=");
		sb.append(getClassPK());
		sb.append(", logradouro=");
		sb.append(getLogradouro());
		sb.append(", numero=");
		sb.append(getNumero());
		sb.append(", complemento=");
		sb.append(getComplemento());
		sb.append(", cep=");
		sb.append(getCep());
		sb.append(", bairro=");
		sb.append(getBairro());
		sb.append(", cidadeId=");
		sb.append(getCidadeId());
		sb.append(", uf=");
		sb.append(getUf());
		sb.append(", paisId=");
		sb.append(getPaisId());
		sb.append(", principal=");
		sb.append(getPrincipal());
		sb.append(", tipo=");
		sb.append(getTipo());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(64);

		sb.append("<model><model-name>");
		sb.append("br.com.prodevelopment.contato.model.Endereco");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>enderecoId</column-name><column-value><![CDATA[");
		sb.append(getEnderecoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createUserId</column-name><column-value><![CDATA[");
		sb.append(getCreateUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedUserId</column-name><column-value><![CDATA[");
		sb.append(getModifiedUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>classNameId</column-name><column-value><![CDATA[");
		sb.append(getClassNameId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>classPK</column-name><column-value><![CDATA[");
		sb.append(getClassPK());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>logradouro</column-name><column-value><![CDATA[");
		sb.append(getLogradouro());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>numero</column-name><column-value><![CDATA[");
		sb.append(getNumero());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>complemento</column-name><column-value><![CDATA[");
		sb.append(getComplemento());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cep</column-name><column-value><![CDATA[");
		sb.append(getCep());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bairro</column-name><column-value><![CDATA[");
		sb.append(getBairro());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cidadeId</column-name><column-value><![CDATA[");
		sb.append(getCidadeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>uf</column-name><column-value><![CDATA[");
		sb.append(getUf());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paisId</column-name><column-value><![CDATA[");
		sb.append(getPaisId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>principal</column-name><column-value><![CDATA[");
		sb.append(getPrincipal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tipo</column-name><column-value><![CDATA[");
		sb.append(getTipo());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Endereco.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Endereco.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _enderecoId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _createUserId;
	private String _createUserUuid;
	private long _modifiedUserId;
	private String _modifiedUserUuid;
	private Date _createDate;
	private Date _modifiedDate;
	private long _classNameId;
	private long _originalClassNameId;
	private boolean _setOriginalClassNameId;
	private long _classPK;
	private long _originalClassPK;
	private boolean _setOriginalClassPK;
	private String _logradouro;
	private String _numero;
	private String _complemento;
	private String _cep;
	private String _originalCep;
	private String _bairro;
	private String _originalBairro;
	private long _cidadeId;
	private long _originalCidadeId;
	private boolean _setOriginalCidadeId;
	private String _uf;
	private String _originalUf;
	private long _paisId;
	private long _originalPaisId;
	private boolean _setOriginalPaisId;
	private boolean _principal;
	private boolean _originalPrincipal;
	private boolean _setOriginalPrincipal;
	private int _tipo;
	private long _columnBitmask;
	private Endereco _escapedModel;
}